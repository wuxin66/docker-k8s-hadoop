---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jupyterhub-config-py
data:
  jupyterhub-config.py: |-
    import os
    c.JupyterHub.spawner_class = 'kubespawner.KubeSpawner'

    c.JupyterHub.ip = '0.0.0.0'
    c.JupyterHub.hub_ip = '0.0.0.0'
    c.JupyterHub.cleanup_servers = False
    c.KubeSpawner.start_timeout = 60 * 5 
    c.KubeSpawner.singleuser_image_spec = 'cacidocker-caciuk.azurecr.io/caci-main/jupyterhub-singleuser:latest'
    c.KubeSpawner.hub_connect_ip = os.environ['HUB_CONNECT_IP']

    c.KubeSpawner.mem_limit = '2G'
    c.KubeSpawner.cpu_limit = 1
    c.JupyterHub.authenticator_class = 'dummyauthenticator.DummyAuthenticator'
    
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jupyterhub
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: jupyterhub
    spec:
      containers:
      - name: proxy
        image: jupyterhub/configurable-http-proxy
        ports:
          - containerPort: 8000
          - containerPort: 8001
        command:
          - configurable-http-proxy
          - --ip
          - 0.0.0.0
          - --api-ip
          - 0.0.0.0
          - --default-target
          - http://127.0.0.1:8081
          - --error-target
          - http://127.0.0.1:8081/hub/error
      - name: jupyterhub
        image: cacidocker-caciuk.azurecr.io/caci-main/jupyterhub:latest
        ports:
          - containerPort: 8081
        volumeMounts:
          - name: config-volume
            mountPath: "/srv/jupyterhub/"
      imagePullSecrets:
        - name: myregistrykey
      volumes:
        - name: config-volume
          configMap:
            name: jupyterhub-config-py
            items:
              - key: jupyterhub-config.py
                path: jupyterhub_config.py
---
apiVersion: v1
kind: Service
metadata:
  name: jupyterhub
  labels:
    app: jupyterhub
spec:
  type: NodePort
  ports:
  - name: proxy-lookup
    port: 80
    targetPort: 8000
  - name: proxy-api
    port: 8001
    targetPort: 8001
  selector:
    app: jupyterhub